name: Build and Publish API Server

on:
  # run it on push to the default repository branch
  push:
    branches: [master]
    paths:
      - server/**

jobs:

  create-envfile:
    runs-on: ubuntu-latest
    steps:
      - name: Create env file
        run: |
          touch .env
          echo POCKETBASE_URL="http://pocketbase-filerr:8090" > .env
          echo POCKETBASE_ADMIN_USER=${POCKETBASE_ADMIN_USER} > .env
          echo POCKETBASE_ADMIN_PASSWORD=${POCKETBASE_ADMIN_PASSWORD} > .env
          echo DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL} > .env
          cat .env
        env: 
          POCKETBASE_ADMIN_USER: ${{ secrets.FILERR_POCKETBASE_ADMIN_USER }}
          POCKETBASE_ADMIN_PASSWORD: ${{ secrets.FILERR_POCKETBASE_ADMIN_PASSWORD }}
          DISCORD_WEBHOOK_URL: ${{ secrets.FILERR_DISCORD_WEBHOOK_URL }}



  # define job to build and publish docker image
  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build image and push to Docker Hub and GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./server
          # Note: tags has to be all lower-case
          tags: |
            ghcr.io/emilzackrisson/filerr-server:latest
          # build on feature branches, push only on master branch
          push: ${{ github.ref == 'refs/heads/master' }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
